/**
 * @fileoverview gRPC-Web generated client stub for bookit
 * @enhanceable
 * @public
 */

// Code generated by protoc-gen-grpc-web. DO NOT EDIT.
// versions:
// 	protoc-gen-grpc-web v1.4.2
// 	protoc              v4.25.1
// source: book.proto


/* eslint-disable */
// @ts-nocheck



const grpc = {};
grpc.web = require('grpc-web');


var google_protobuf_wrappers_pb = require('google-protobuf/google/protobuf/wrappers_pb.js')
const proto = {};
proto.bookit = require('./book_pb.js');

/**
 * @param {string} hostname
 * @param {?Object} credentials
 * @param {?grpc.web.ClientOptions} options
 * @constructor
 * @struct
 * @final
 */
proto.bookit.BookItClient =
    function(hostname, credentials, options) {
  if (!options) options = {};
  options.format = 'text';

  /**
   * @private @const {!grpc.web.GrpcWebClientBase} The client
   */
  this.client_ = new grpc.web.GrpcWebClientBase(options);

  /**
   * @private @const {string} The hostname
   */
  this.hostname_ = hostname.replace(/\/+$/, '');

};


/**
 * @param {string} hostname
 * @param {?Object} credentials
 * @param {?grpc.web.ClientOptions} options
 * @constructor
 * @struct
 * @final
 */
proto.bookit.BookItPromiseClient =
    function(hostname, credentials, options) {
  if (!options) options = {};
  options.format = 'text';

  /**
   * @private @const {!grpc.web.GrpcWebClientBase} The client
   */
  this.client_ = new grpc.web.GrpcWebClientBase(options);

  /**
   * @private @const {string} The hostname
   */
  this.hostname_ = hostname.replace(/\/+$/, '');

};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.bookit.ReadBookRequest,
 *   !proto.bookit.ReadBookResponse>}
 */
const methodDescriptor_BookIt_ReadBook = new grpc.web.MethodDescriptor(
  '/bookit.BookIt/ReadBook',
  grpc.web.MethodType.UNARY,
  proto.bookit.ReadBookRequest,
  proto.bookit.ReadBookResponse,
  /**
   * @param {!proto.bookit.ReadBookRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.bookit.ReadBookResponse.deserializeBinary
);


/**
 * @param {!proto.bookit.ReadBookRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.bookit.ReadBookResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.bookit.ReadBookResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.bookit.BookItClient.prototype.readBook =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/bookit.BookIt/ReadBook',
      request,
      metadata || {},
      methodDescriptor_BookIt_ReadBook,
      callback);
};


/**
 * @param {!proto.bookit.ReadBookRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.bookit.ReadBookResponse>}
 *     Promise that resolves to the response
 */
proto.bookit.BookItPromiseClient.prototype.readBook =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/bookit.BookIt/ReadBook',
      request,
      metadata || {},
      methodDescriptor_BookIt_ReadBook);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.bookit.GetAllRequest,
 *   !proto.bookit.GetAllResponse>}
 */
const methodDescriptor_BookIt_ListBook = new grpc.web.MethodDescriptor(
  '/bookit.BookIt/ListBook',
  grpc.web.MethodType.UNARY,
  proto.bookit.GetAllRequest,
  proto.bookit.GetAllResponse,
  /**
   * @param {!proto.bookit.GetAllRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.bookit.GetAllResponse.deserializeBinary
);


/**
 * @param {!proto.bookit.GetAllRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.bookit.GetAllResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.bookit.GetAllResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.bookit.BookItClient.prototype.listBook =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/bookit.BookIt/ListBook',
      request,
      metadata || {},
      methodDescriptor_BookIt_ListBook,
      callback);
};


/**
 * @param {!proto.bookit.GetAllRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.bookit.GetAllResponse>}
 *     Promise that resolves to the response
 */
proto.bookit.BookItPromiseClient.prototype.listBook =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/bookit.BookIt/ListBook',
      request,
      metadata || {},
      methodDescriptor_BookIt_ListBook);
};


/**
 * @const
 * @type {!grpc.web.MethodDescriptor<
 *   !proto.bookit.UpdateBookRequest,
 *   !proto.bookit.UpdateBookResponse>}
 */
const methodDescriptor_BookIt_UpdateBook = new grpc.web.MethodDescriptor(
  '/bookit.BookIt/UpdateBook',
  grpc.web.MethodType.UNARY,
  proto.bookit.UpdateBookRequest,
  proto.bookit.UpdateBookResponse,
  /**
   * @param {!proto.bookit.UpdateBookRequest} request
   * @return {!Uint8Array}
   */
  function(request) {
    return request.serializeBinary();
  },
  proto.bookit.UpdateBookResponse.deserializeBinary
);


/**
 * @param {!proto.bookit.UpdateBookRequest} request The
 *     request proto
 * @param {?Object<string, string>} metadata User defined
 *     call metadata
 * @param {function(?grpc.web.RpcError, ?proto.bookit.UpdateBookResponse)}
 *     callback The callback function(error, response)
 * @return {!grpc.web.ClientReadableStream<!proto.bookit.UpdateBookResponse>|undefined}
 *     The XHR Node Readable Stream
 */
proto.bookit.BookItClient.prototype.updateBook =
    function(request, metadata, callback) {
  return this.client_.rpcCall(this.hostname_ +
      '/bookit.BookIt/UpdateBook',
      request,
      metadata || {},
      methodDescriptor_BookIt_UpdateBook,
      callback);
};


/**
 * @param {!proto.bookit.UpdateBookRequest} request The
 *     request proto
 * @param {?Object<string, string>=} metadata User defined
 *     call metadata
 * @return {!Promise<!proto.bookit.UpdateBookResponse>}
 *     Promise that resolves to the response
 */
proto.bookit.BookItPromiseClient.prototype.updateBook =
    function(request, metadata) {
  return this.client_.unaryCall(this.hostname_ +
      '/bookit.BookIt/UpdateBook',
      request,
      metadata || {},
      methodDescriptor_BookIt_UpdateBook);
};


module.exports = proto.bookit;

